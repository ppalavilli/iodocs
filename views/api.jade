div(id='api_header')
   h1 API Explorer
   span API 
   select(id='api_selector')
      - for (var api in apiConfig)
         option(selected=api == apiName, value=appContext + '/' + api) #{apiConfig[api].name}

- if (session.authed && apiInfo.oauth && apiInfo.oauth.type =='three-legged')
    - var authed ='authed'
- else
    - var authed =''


form#credentials
    input(type='hidden', name='apiName', value=apiName)
    - if (apiInfo.auth) 
        div(class='credentials ' + authed)
         - if (authed && apiInfo.oauth)
             span Authenticated with OAuth
             img(src='/images/accept.png')
         - else
             h2 API Credentials
               img(src='/images/key.png')

             - if (apiInfo.oauth)
                 input(type='hidden', name='oauth', value='authrequired')

             - if (apiInfo.auth.defaultKey)
                 - var defaultKey =apiInfo.auth.defaultKey
             - else
                 - var defaultKey =''

             - if (apiInfo.auth.defaultSecret)
                 - var defaultSecret =apiInfo.auth.defaultSecret
             - else
                 - var defaultSecret =''
             
             div
                 - if (apiInfo.auth == 'authorization')
                     label(for='key') Authorization
                     input(id='authorization', name='authorization', value='token1', style='color=#EEEEEE')
                 - else if (apiInfo.auth != 'paypal')
                     label(for='key') API Key
                     input(id='key', name='key', value=defaultKey, style='color=#EEEEEE')
                 - else
                     div
                         label(for='userName') API UserName
                         input(type='text', id='userName', name='userName', value=apiInfo.apiUsername, style='color=#EEEEEE')
                     div
                         label(for='password') API Password
                         input(type='text',id='password', name='password', value=apiInfo.apiPassword, style='color=#EEEEEE')
                     div
                         label(for='signature') API Signature
                         input(type='text',id='signature', name='signature', value=apiInfo.apiSignature, style='color=#EEEEEE')
                  - if (apiInfo.appID)
                     div
                         label(for='appId') Application ID
                         input(type='text',id='appId', name='appId', value=apiInfo.appID, style='color=#EEEEEE')
             div
                 - if (apiInfo.oauth || apiInfo.signature)
                     label(for='secret') Shared Secret
                     input(type='text',id='secret', name='secret', value=defaultSecret, style='color=#EEEEEE')
             - if (apiInfo.oauth && apiInfo.oauth.type !='two-legged')
                 div
                    input(name='oauth', value='Authenticate with OAuth', type='submit', id='oauth-auth')
ul(id='endpoints')
    - each endpoint in apiDefinition.endpoints
        li.endpoint
            h3.title
                span.name=endpoint.name
                ul.actions
                    li.list-methods
                        a(href='#') List Methods
                    li.expand-methods
                        a(href='#') Expand Methods
            - if (endpoint.methods.length)
            ul.methods.hidden
                - each method in endpoint.methods
                    - var httpmethod =method.HTTPMethod.toLowerCase()
                    - if (method.RequiresOAuth ==='Y' || method.RequiresOAuth ===true)
                        - var secure ='authrequired'
                    - else
                        - var secure =''
                    li(class='method ' + httpmethod + ' ' + secure)
                        div.title
                            span.http-method #{method.HTTPMethod}
                            span.name #{method.Name}
                            span.uri #{method.URI}
                        form(class='hidden', enctype=method.RequestContentType)
                            input(type='hidden', name='httpMethod', value=method.HTTPMethod)
                            input(type='hidden', name='oauth', value=secure)
                            input(type='hidden', name='methodUri', value=method.URI)
                            input(type='hidden', name='methodName', value=method.Name)                                                        
                            input(type='hidden', name='dataFormat', value=method.RequestContentType)
                            - if (method.Parameters.length > 0)
                                    div.parameter
                                        span.header Parameter
                                        span.header Description
                                        a(class='optional')
                                           span Show optional fields
                                           span(style='display: none;') Hide optional fields
                                    ul
                                    - var paramCount =0
                                        - var check = 'false'
                                        - var hide = 'true'
                                        - var elemName = ''
                                        - generateElements(method.Parameters,elemName, check, hide)
                                        - function generateElements(parameters,elemName,check, hide){
                                            - parameters.forEach(function(parameter,check){
                                                - var className = ''
                                                - paramCount++
                                                - if(check =='true')
                                                - check = 'false'
                                                - if(elemName =='undefined')
                                                    - elemName = parameter.Name
                                                - if (parameter.Required =='Y')
                                                    - var required = 'true'
                                                    - className ='required'
                                                - else
                                                      - var required = 'false'
                                                      - className =''
                                                - if (Object.prototype.toString.call(parameter) === '[object Array]')
                                                    - tmpVal = elemName
                                                    - elemName = elemName + '(0)'
                                                    - generateElements(parameter,elemName, check);
                                                    - elemName = tmpVal
                                                - else if(parameter.Type !='complex')
                                                        -if(required == 'true')
                                                            - var id = 'required'
                                                        -else 
                                                            - var id = 'optional'
                                                        li.title(id=id)
                                                            <div class='title'>#{parameter.Name} (#{parameter.Type})</div>
                                                            <div class='description'>#{parameter.Description}</div>
                                                            <div class='title'>
                                                            - if (parameter.Type =='enumerated')
                                                                    select(name='params[' + ((elemName == 'undefined'|| elemName.trim() === '') ? '' : elemName + '.') + parameter.Name + ']', placeholder=className, class='apiInput')
                                                                        - if (parameter.Default =='')
                                                                            option(value='') 
                                                                        - each choice in parameter.EnumeratedList
                                                                            - if (parameter.Default ==choice)
                                                                                    option(value=choice, selected=true) #{choice}
                                                                            - else
                                                                                    option(value=choice) #{choice}
                                                            - else if (parameter.Type =='boolean')
                                                                    select(name='params[' + ((elemName == 'undefined'|| elemName.trim() === '') ? '' : elemName + '.') + parameter.Name + ']', placeholder=className, class='apiInput')
                                                                        - if (parameter.Default =='')
                                                                            option(value='') 
                                                                        - each choice in [0,1]
                                                                            option(value=choice) #{choice}
                                                            - else
                                                                input(type='text',name='params[' + ((elemName == 'undefined' || elemName.trim() === '') ? '' : elemName + '.') + parameter.Name + ']', value=parameter.Default, placeholder=className, class='apiInput')
                                                            </div>
                                                - else if(parameter.Type == 'complex')
                                                    -if(parameter.Required =='Y')
                                                        - var id = 'required'
                                                    -else 
                                                        - var id = 'optional'
                                                    div
                                                        - check = 'true'
                                                        - var attr='id'+paramCount
                                                        - var tempVal = ''
                                                        - ++paramCount
                                                        - var tableId='id'+paramCount
                                                        - if(hide === 'true')
                                                            - var hideClass = 'hideElem'
                                                        - else
                                                            - var hideClass = ''
                                                        - hide = 'false'    
                                                        li.trigger.title.comx(class=hideClass)(id=id)
                                                            - if (parameter.Required =='Y' || parameter.Required === true)
                                                                - var required = 'true'
                                                                - var className = 'required'
                                                            - else
                                                                - var required = 'false'
                                                                - var className = ''
                                                            <span class="title">#{parameter.Name}<span class='#{className}'>#{className}</span></span>
                                                            <div class="description">#{parameter.Description}</div>
                                                            
                                                        <ul class="borderbox">                                                        
                                                        - tempVal = elemName
                                                        - if (elemName == '')
                                                                - elemName = parameter.Name
                                                        - else
                                                                - elemName = ((elemName == 'undefined'|| elemName.trim() === '') ? '' : elemName + '.') + parameter.Name
                                                        - generateElements(parameter.Members,elemName, check);
                                                        - elemName = tempVal                                                         
                                                        </ul>
                                                    - if (Object.prototype.toString.call(parameter.Members[0]) === '[object Array]')
                                                        <li>
                                                        <input class="repeat1 pushbutton1" type="button" value ="Add" /> 
                                                        <input class="remove1 pushbutton1" type="button" value ="Remove"/>
                                                        </li>
                                            - })
                                        - }
                            - if (method.headers && method.headers.length > 0)
                                div.headers
                                    h4.title
                                        div.indicator
                                        span Headers
                                    div.fields
                                        table
                                            colgroup
                                                col(class='name')
                                                col(class='value')
                                                col(class='remove')
                                            thead
                                                tr
                                                    th Name
                                                    th(colspan='2') Value
                                            tbody
                                                tr
                                                    td
                                                        input(name='headerNames[]', placeholder='Name')
                                                    td
                                                        input(name='headerValues[]', placeholder='Value')
                                                    td
                                                        a(href='#', class='remove') Remove
                                        a(href='#', class='add-headers') Add Header
                                    // Create header fields and button to add/remove headers.
                            - if (!method['read-only'])
                                input(type='submit', id=method.MethodName, value='Try it!', class="pushbutton1 btn btn-primary")
